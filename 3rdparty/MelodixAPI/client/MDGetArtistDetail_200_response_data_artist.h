/**
 * MelodixAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * MDGetArtistDetail_200_response_data_artist.h
 *
 * 
 */

#ifndef MDGetArtistDetail_200_response_data_artist_H
#define MDGetArtistDetail_200_response_data_artist_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "MDEnum.h"
#include "MDObject.h"

namespace MelodixAPI {

class MDGetArtistDetail_200_response_data_artist : public MDObject {
public:
    MDGetArtistDetail_200_response_data_artist();
    MDGetArtistDetail_200_response_data_artist(QString json);
    ~MDGetArtistDetail_200_response_data_artist() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getCover() const;
    void setCover(const QString &cover);
    bool is_cover_Set() const;
    bool is_cover_Valid() const;

    QString getAvatar() const;
    void setAvatar(const QString &avatar);
    bool is_avatar_Set() const;
    bool is_avatar_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<QString> getTransNames() const;
    void setTransNames(const QList<QString> &trans_names);
    bool is_trans_names_Set() const;
    bool is_trans_names_Valid() const;

    QList<QString> getAlias() const;
    void setAlias(const QList<QString> &alias);
    bool is_alias_Set() const;
    bool is_alias_Valid() const;

    QList<QString> getIdentities() const;
    void setIdentities(const QList<QString> &identities);
    bool is_identities_Set() const;
    bool is_identities_Valid() const;

    QList<QString> getIdentifyTag() const;
    void setIdentifyTag(const QList<QString> &identify_tag);
    bool is_identify_tag_Set() const;
    bool is_identify_tag_Valid() const;

    QString getBriefDesc() const;
    void setBriefDesc(const QString &brief_desc);
    bool is_brief_desc_Set() const;
    bool is_brief_desc_Valid() const;

    qint32 getAlbumSize() const;
    void setAlbumSize(const qint32 &album_size);
    bool is_album_size_Set() const;
    bool is_album_size_Valid() const;

    qint32 getMusicSize() const;
    void setMusicSize(const qint32 &music_size);
    bool is_music_size_Set() const;
    bool is_music_size_Valid() const;

    qint32 getMvSize() const;
    void setMvSize(const qint32 &mv_size);
    bool is_mv_size_Set() const;
    bool is_mv_size_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_cover;
    bool m_cover_isSet;
    bool m_cover_isValid;

    QString m_avatar;
    bool m_avatar_isSet;
    bool m_avatar_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<QString> m_trans_names;
    bool m_trans_names_isSet;
    bool m_trans_names_isValid;

    QList<QString> m_alias;
    bool m_alias_isSet;
    bool m_alias_isValid;

    QList<QString> m_identities;
    bool m_identities_isSet;
    bool m_identities_isValid;

    QList<QString> m_identify_tag;
    bool m_identify_tag_isSet;
    bool m_identify_tag_isValid;

    QString m_brief_desc;
    bool m_brief_desc_isSet;
    bool m_brief_desc_isValid;

    qint32 m_album_size;
    bool m_album_size_isSet;
    bool m_album_size_isValid;

    qint32 m_music_size;
    bool m_music_size_isSet;
    bool m_music_size_isValid;

    qint32 m_mv_size;
    bool m_mv_size_isSet;
    bool m_mv_size_isValid;
};

} // namespace MelodixAPI

Q_DECLARE_METATYPE(MelodixAPI::MDGetArtistDetail_200_response_data_artist)

#endif // MDGetArtistDetail_200_response_data_artist_H
