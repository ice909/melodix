/**
 * MelodixAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * MDGetTopPlaylist_200_response_playlists_inner.h
 *
 * 
 */

#ifndef MDGetTopPlaylist_200_response_playlists_inner_H
#define MDGetTopPlaylist_200_response_playlists_inner_H

#include <QJsonObject>

#include "MDGetTopPlaylist_200_response_playlists_inner_creator.h"
#include "MDGetTopPlaylist_200_response_playlists_inner_subscribers_inner.h"
#include <QList>
#include <QString>

#include "MDEnum.h"
#include "MDObject.h"

namespace MelodixAPI {
class MDGetTopPlaylist_200_response_playlists_inner_creator;
class MDGetTopPlaylist_200_response_playlists_inner_subscribers_inner;

class MDGetTopPlaylist_200_response_playlists_inner : public MDObject {
public:
    MDGetTopPlaylist_200_response_playlists_inner();
    MDGetTopPlaylist_200_response_playlists_inner(QString json);
    ~MDGetTopPlaylist_200_response_playlists_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    qint32 getTrackNumberUpdateTime() const;
    void setTrackNumberUpdateTime(const qint32 &track_number_update_time);
    bool is_track_number_update_time_Set() const;
    bool is_track_number_update_time_Valid() const;

    qint32 getStatus() const;
    void setStatus(const qint32 &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    qint32 getUserId() const;
    void setUserId(const qint32 &user_id);
    bool is_user_id_Set() const;
    bool is_user_id_Valid() const;

    qint32 getCreateTime() const;
    void setCreateTime(const qint32 &create_time);
    bool is_create_time_Set() const;
    bool is_create_time_Valid() const;

    qint32 getUpdateTime() const;
    void setUpdateTime(const qint32 &update_time);
    bool is_update_time_Set() const;
    bool is_update_time_Valid() const;

    qint32 getSubscribedCount() const;
    void setSubscribedCount(const qint32 &subscribed_count);
    bool is_subscribed_count_Set() const;
    bool is_subscribed_count_Valid() const;

    qint32 getTrackCount() const;
    void setTrackCount(const qint32 &track_count);
    bool is_track_count_Set() const;
    bool is_track_count_Valid() const;

    qint32 getCloudTrackCount() const;
    void setCloudTrackCount(const qint32 &cloud_track_count);
    bool is_cloud_track_count_Set() const;
    bool is_cloud_track_count_Valid() const;

    QString getCoverImgUrl() const;
    void setCoverImgUrl(const QString &cover_img_url);
    bool is_cover_img_url_Set() const;
    bool is_cover_img_url_Valid() const;

    qint32 getCoverImgId() const;
    void setCoverImgId(const qint32 &cover_img_id);
    bool is_cover_img_id_Set() const;
    bool is_cover_img_id_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QList<QString> getTags() const;
    void setTags(const QList<QString> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    qint32 getPlayCount() const;
    void setPlayCount(const qint32 &play_count);
    bool is_play_count_Set() const;
    bool is_play_count_Valid() const;

    qint32 getTrackUpdateTime() const;
    void setTrackUpdateTime(const qint32 &track_update_time);
    bool is_track_update_time_Set() const;
    bool is_track_update_time_Valid() const;

    qint32 getSpecialType() const;
    void setSpecialType(const qint32 &special_type);
    bool is_special_type_Set() const;
    bool is_special_type_Valid() const;

    qint32 getTotalDuration() const;
    void setTotalDuration(const qint32 &total_duration);
    bool is_total_duration_Set() const;
    bool is_total_duration_Valid() const;

    MDGetTopPlaylist_200_response_playlists_inner_creator getCreator() const;
    void setCreator(const MDGetTopPlaylist_200_response_playlists_inner_creator &creator);
    bool is_creator_Set() const;
    bool is_creator_Valid() const;

    QList<MDGetTopPlaylist_200_response_playlists_inner_subscribers_inner> getSubscribers() const;
    void setSubscribers(const QList<MDGetTopPlaylist_200_response_playlists_inner_subscribers_inner> &subscribers);
    bool is_subscribers_Set() const;
    bool is_subscribers_Valid() const;

    bool isSubscribed() const;
    void setSubscribed(const bool &subscribed);
    bool is_subscribed_Set() const;
    bool is_subscribed_Valid() const;

    QString getCommentThreadId() const;
    void setCommentThreadId(const QString &comment_thread_id);
    bool is_comment_thread_id_Set() const;
    bool is_comment_thread_id_Valid() const;

    bool isNewImported() const;
    void setNewImported(const bool &new_imported);
    bool is_new_imported_Set() const;
    bool is_new_imported_Valid() const;

    qint32 getAdType() const;
    void setAdType(const qint32 &ad_type);
    bool is_ad_type_Set() const;
    bool is_ad_type_Valid() const;

    bool isHighQuality() const;
    void setHighQuality(const bool &high_quality);
    bool is_high_quality_Set() const;
    bool is_high_quality_Valid() const;

    qint32 getPrivacy() const;
    void setPrivacy(const qint32 &privacy);
    bool is_privacy_Set() const;
    bool is_privacy_Valid() const;

    bool isOrdered() const;
    void setOrdered(const bool &ordered);
    bool is_ordered_Set() const;
    bool is_ordered_Valid() const;

    bool isAnonimous() const;
    void setAnonimous(const bool &anonimous);
    bool is_anonimous_Set() const;
    bool is_anonimous_Valid() const;

    qint32 getCoverStatus() const;
    void setCoverStatus(const qint32 &cover_status);
    bool is_cover_status_Set() const;
    bool is_cover_status_Valid() const;

    qint32 getShareCount() const;
    void setShareCount(const qint32 &share_count);
    bool is_share_count_Set() const;
    bool is_share_count_Valid() const;

    QString getCoverImgIdStr() const;
    void setCoverImgIdStr(const QString &cover_img_id_str);
    bool is_cover_img_id_str_Set() const;
    bool is_cover_img_id_str_Valid() const;

    QString getAlg() const;
    void setAlg(const QString &alg);
    bool is_alg_Set() const;
    bool is_alg_Valid() const;

    qint32 getCommentCount() const;
    void setCommentCount(const qint32 &comment_count);
    bool is_comment_count_Set() const;
    bool is_comment_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    qint32 m_track_number_update_time;
    bool m_track_number_update_time_isSet;
    bool m_track_number_update_time_isValid;

    qint32 m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    qint32 m_user_id;
    bool m_user_id_isSet;
    bool m_user_id_isValid;

    qint32 m_create_time;
    bool m_create_time_isSet;
    bool m_create_time_isValid;

    qint32 m_update_time;
    bool m_update_time_isSet;
    bool m_update_time_isValid;

    qint32 m_subscribed_count;
    bool m_subscribed_count_isSet;
    bool m_subscribed_count_isValid;

    qint32 m_track_count;
    bool m_track_count_isSet;
    bool m_track_count_isValid;

    qint32 m_cloud_track_count;
    bool m_cloud_track_count_isSet;
    bool m_cloud_track_count_isValid;

    QString m_cover_img_url;
    bool m_cover_img_url_isSet;
    bool m_cover_img_url_isValid;

    qint32 m_cover_img_id;
    bool m_cover_img_id_isSet;
    bool m_cover_img_id_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QList<QString> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    qint32 m_play_count;
    bool m_play_count_isSet;
    bool m_play_count_isValid;

    qint32 m_track_update_time;
    bool m_track_update_time_isSet;
    bool m_track_update_time_isValid;

    qint32 m_special_type;
    bool m_special_type_isSet;
    bool m_special_type_isValid;

    qint32 m_total_duration;
    bool m_total_duration_isSet;
    bool m_total_duration_isValid;

    MDGetTopPlaylist_200_response_playlists_inner_creator m_creator;
    bool m_creator_isSet;
    bool m_creator_isValid;

    QList<MDGetTopPlaylist_200_response_playlists_inner_subscribers_inner> m_subscribers;
    bool m_subscribers_isSet;
    bool m_subscribers_isValid;

    bool m_subscribed;
    bool m_subscribed_isSet;
    bool m_subscribed_isValid;

    QString m_comment_thread_id;
    bool m_comment_thread_id_isSet;
    bool m_comment_thread_id_isValid;

    bool m_new_imported;
    bool m_new_imported_isSet;
    bool m_new_imported_isValid;

    qint32 m_ad_type;
    bool m_ad_type_isSet;
    bool m_ad_type_isValid;

    bool m_high_quality;
    bool m_high_quality_isSet;
    bool m_high_quality_isValid;

    qint32 m_privacy;
    bool m_privacy_isSet;
    bool m_privacy_isValid;

    bool m_ordered;
    bool m_ordered_isSet;
    bool m_ordered_isValid;

    bool m_anonimous;
    bool m_anonimous_isSet;
    bool m_anonimous_isValid;

    qint32 m_cover_status;
    bool m_cover_status_isSet;
    bool m_cover_status_isValid;

    qint32 m_share_count;
    bool m_share_count_isSet;
    bool m_share_count_isValid;

    QString m_cover_img_id_str;
    bool m_cover_img_id_str_isSet;
    bool m_cover_img_id_str_isValid;

    QString m_alg;
    bool m_alg_isSet;
    bool m_alg_isValid;

    qint32 m_comment_count;
    bool m_comment_count_isSet;
    bool m_comment_count_isValid;
};

} // namespace MelodixAPI

Q_DECLARE_METATYPE(MelodixAPI::MDGetTopPlaylist_200_response_playlists_inner)

#endif // MDGetTopPlaylist_200_response_playlists_inner_H
