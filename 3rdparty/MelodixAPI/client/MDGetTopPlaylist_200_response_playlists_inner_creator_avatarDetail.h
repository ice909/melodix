/**
 * MelodixAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * MDGetTopPlaylist_200_response_playlists_inner_creator_avatarDetail.h
 *
 * 
 */

#ifndef MDGetTopPlaylist_200_response_playlists_inner_creator_avatarDetail_H
#define MDGetTopPlaylist_200_response_playlists_inner_creator_avatarDetail_H

#include <QJsonObject>

#include <QString>

#include "MDEnum.h"
#include "MDObject.h"

namespace MelodixAPI {

class MDGetTopPlaylist_200_response_playlists_inner_creator_avatarDetail : public MDObject {
public:
    MDGetTopPlaylist_200_response_playlists_inner_creator_avatarDetail();
    MDGetTopPlaylist_200_response_playlists_inner_creator_avatarDetail(QString json);
    ~MDGetTopPlaylist_200_response_playlists_inner_creator_avatarDetail() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getUserType() const;
    void setUserType(const qint32 &user_type);
    bool is_user_type_Set() const;
    bool is_user_type_Valid() const;

    qint32 getIdentityLevel() const;
    void setIdentityLevel(const qint32 &identity_level);
    bool is_identity_level_Set() const;
    bool is_identity_level_Valid() const;

    QString getIdentityIconUrl() const;
    void setIdentityIconUrl(const QString &identity_icon_url);
    bool is_identity_icon_url_Set() const;
    bool is_identity_icon_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_user_type;
    bool m_user_type_isSet;
    bool m_user_type_isValid;

    qint32 m_identity_level;
    bool m_identity_level_isSet;
    bool m_identity_level_isValid;

    QString m_identity_icon_url;
    bool m_identity_icon_url_isSet;
    bool m_identity_icon_url_isValid;
};

} // namespace MelodixAPI

Q_DECLARE_METATYPE(MelodixAPI::MDGetTopPlaylist_200_response_playlists_inner_creator_avatarDetail)

#endif // MDGetTopPlaylist_200_response_playlists_inner_creator_avatarDetail_H
