/**
 * MelodixAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * MDGetArtistDetail_200_response_data_vipRights.h
 *
 * 
 */

#ifndef MDGetArtistDetail_200_response_data_vipRights_H
#define MDGetArtistDetail_200_response_data_vipRights_H

#include <QJsonObject>

#include "MDGetArtistDetail_200_response_data_vipRights_rightsInfoDetailDtoList_inner.h"
#include <QList>

#include "MDEnum.h"
#include "MDObject.h"

namespace MelodixAPI {
class MDGetArtistDetail_200_response_data_vipRights_rightsInfoDetailDtoList_inner;

class MDGetArtistDetail_200_response_data_vipRights : public MDObject {
public:
    MDGetArtistDetail_200_response_data_vipRights();
    MDGetArtistDetail_200_response_data_vipRights(QString json);
    ~MDGetArtistDetail_200_response_data_vipRights() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<MDGetArtistDetail_200_response_data_vipRights_rightsInfoDetailDtoList_inner> getRightsInfoDetailDtoList() const;
    void setRightsInfoDetailDtoList(const QList<MDGetArtistDetail_200_response_data_vipRights_rightsInfoDetailDtoList_inner> &rights_info_detail_dto_list);
    bool is_rights_info_detail_dto_list_Set() const;
    bool is_rights_info_detail_dto_list_Valid() const;

    bool isOldProtocol() const;
    void setOldProtocol(const bool &old_protocol);
    bool is_old_protocol_Set() const;
    bool is_old_protocol_Valid() const;

    qint32 getRedVipAnnualCount() const;
    void setRedVipAnnualCount(const qint32 &red_vip_annual_count);
    bool is_red_vip_annual_count_Set() const;
    bool is_red_vip_annual_count_Valid() const;

    qint32 getRedVipLevel() const;
    void setRedVipLevel(const qint32 &red_vip_level);
    bool is_red_vip_level_Set() const;
    bool is_red_vip_level_Valid() const;

    qint32 getNow() const;
    void setNow(const qint32 &now);
    bool is_now_Set() const;
    bool is_now_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<MDGetArtistDetail_200_response_data_vipRights_rightsInfoDetailDtoList_inner> m_rights_info_detail_dto_list;
    bool m_rights_info_detail_dto_list_isSet;
    bool m_rights_info_detail_dto_list_isValid;

    bool m_old_protocol;
    bool m_old_protocol_isSet;
    bool m_old_protocol_isValid;

    qint32 m_red_vip_annual_count;
    bool m_red_vip_annual_count_isSet;
    bool m_red_vip_annual_count_isValid;

    qint32 m_red_vip_level;
    bool m_red_vip_level_isSet;
    bool m_red_vip_level_isValid;

    qint32 m_now;
    bool m_now_isSet;
    bool m_now_isValid;
};

} // namespace MelodixAPI

Q_DECLARE_METATYPE(MelodixAPI::MDGetArtistDetail_200_response_data_vipRights)

#endif // MDGetArtistDetail_200_response_data_vipRights_H
