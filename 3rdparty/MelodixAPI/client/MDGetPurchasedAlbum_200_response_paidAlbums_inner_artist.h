/**
 * MelodixAPI
 * Melodix API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * MDGetPurchasedAlbum_200_response_paidAlbums_inner_artist.h
 *
 * 
 */

#ifndef MDGetPurchasedAlbum_200_response_paidAlbums_inner_artist_H
#define MDGetPurchasedAlbum_200_response_paidAlbums_inner_artist_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "MDEnum.h"
#include "MDObject.h"

namespace MelodixAPI {

class MDGetPurchasedAlbum_200_response_paidAlbums_inner_artist : public MDObject {
public:
    MDGetPurchasedAlbum_200_response_paidAlbums_inner_artist();
    MDGetPurchasedAlbum_200_response_paidAlbums_inner_artist(QString json);
    ~MDGetPurchasedAlbum_200_response_paidAlbums_inner_artist() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getAlias() const;
    void setAlias(const QString &alias);
    bool is_alias_Set() const;
    bool is_alias_Valid() const;

    QString getAliaName() const;
    void setAliaName(const QString &alia_name);
    bool is_alia_name_Set() const;
    bool is_alia_name_Valid() const;

    qint32 getAreaId() const;
    void setAreaId(const qint32 &area_id);
    bool is_area_id_Set() const;
    bool is_area_id_Valid() const;

    qint32 getInitial() const;
    void setInitial(const qint32 &initial);
    bool is_initial_Set() const;
    bool is_initial_Valid() const;

    qint32 getType() const;
    void setType(const qint32 &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    qint32 getPicId() const;
    void setPicId(const qint32 &pic_id);
    bool is_pic_id_Set() const;
    bool is_pic_id_Valid() const;

    QString getHotAlbumIds() const;
    void setHotAlbumIds(const QString &hot_album_ids);
    bool is_hot_album_ids_Set() const;
    bool is_hot_album_ids_Valid() const;

    qint32 getMusicSize() const;
    void setMusicSize(const qint32 &music_size);
    bool is_music_size_Set() const;
    bool is_music_size_Valid() const;

    qint32 getAlbumSize() const;
    void setAlbumSize(const qint32 &album_size);
    bool is_album_size_Set() const;
    bool is_album_size_Valid() const;

    qint32 getScore() const;
    void setScore(const qint32 &score);
    bool is_score_Set() const;
    bool is_score_Valid() const;

    qint32 getClick() const;
    void setClick(const qint32 &click);
    bool is_click_Set() const;
    bool is_click_Valid() const;

    QList<QString> getHotSongs() const;
    void setHotSongs(const QList<QString> &hot_songs);
    bool is_hot_songs_Set() const;
    bool is_hot_songs_Valid() const;

    QList<QString> getHotAlbums() const;
    void setHotAlbums(const QList<QString> &hot_albums);
    bool is_hot_albums_Set() const;
    bool is_hot_albums_Valid() const;

    QList<QString> getAlbums() const;
    void setAlbums(const QList<QString> &albums);
    bool is_albums_Set() const;
    bool is_albums_Valid() const;

    QString getBriefDesc() const;
    void setBriefDesc(const QString &brief_desc);
    bool is_brief_desc_Set() const;
    bool is_brief_desc_Valid() const;

    QString getDesc() const;
    void setDesc(const QString &desc);
    bool is_desc_Set() const;
    bool is_desc_Valid() const;

    qint32 getValid() const;
    void setValid(const qint32 &valid);
    bool is_valid_Set() const;
    bool is_valid_Valid() const;

    qint32 getCopyright() const;
    void setCopyright(const qint32 &copyright);
    bool is_copyright_Set() const;
    bool is_copyright_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_alias;
    bool m_alias_isSet;
    bool m_alias_isValid;

    QString m_alia_name;
    bool m_alia_name_isSet;
    bool m_alia_name_isValid;

    qint32 m_area_id;
    bool m_area_id_isSet;
    bool m_area_id_isValid;

    qint32 m_initial;
    bool m_initial_isSet;
    bool m_initial_isValid;

    qint32 m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    qint32 m_pic_id;
    bool m_pic_id_isSet;
    bool m_pic_id_isValid;

    QString m_hot_album_ids;
    bool m_hot_album_ids_isSet;
    bool m_hot_album_ids_isValid;

    qint32 m_music_size;
    bool m_music_size_isSet;
    bool m_music_size_isValid;

    qint32 m_album_size;
    bool m_album_size_isSet;
    bool m_album_size_isValid;

    qint32 m_score;
    bool m_score_isSet;
    bool m_score_isValid;

    qint32 m_click;
    bool m_click_isSet;
    bool m_click_isValid;

    QList<QString> m_hot_songs;
    bool m_hot_songs_isSet;
    bool m_hot_songs_isValid;

    QList<QString> m_hot_albums;
    bool m_hot_albums_isSet;
    bool m_hot_albums_isValid;

    QList<QString> m_albums;
    bool m_albums_isSet;
    bool m_albums_isValid;

    QString m_brief_desc;
    bool m_brief_desc_isSet;
    bool m_brief_desc_isValid;

    QString m_desc;
    bool m_desc_isSet;
    bool m_desc_isValid;

    qint32 m_valid;
    bool m_valid_isSet;
    bool m_valid_isValid;

    qint32 m_copyright;
    bool m_copyright_isSet;
    bool m_copyright_isValid;
};

} // namespace MelodixAPI

Q_DECLARE_METATYPE(MelodixAPI::MDGetPurchasedAlbum_200_response_paidAlbums_inner_artist)

#endif // MDGetPurchasedAlbum_200_response_paidAlbums_inner_artist_H
