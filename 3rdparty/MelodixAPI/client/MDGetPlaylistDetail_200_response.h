/**
 * MelodixAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * MDGetPlaylistDetail_200_response.h
 *
 * 
 */

#ifndef MDGetPlaylistDetail_200_response_H
#define MDGetPlaylistDetail_200_response_H

#include <QJsonObject>

#include "MDGetPlaylistDetail_200_response_playlist.h"
#include "MDGetPlaylistDetail_200_response_privileges_inner.h"
#include <QList>

#include "MDEnum.h"
#include "MDObject.h"

namespace MelodixAPI {
class MDGetPlaylistDetail_200_response_playlist;
class MDGetPlaylistDetail_200_response_privileges_inner;

class MDGetPlaylistDetail_200_response : public MDObject {
public:
    MDGetPlaylistDetail_200_response();
    MDGetPlaylistDetail_200_response(QString json);
    ~MDGetPlaylistDetail_200_response() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getCode() const;
    void setCode(const qint32 &code);
    bool is_code_Set() const;
    bool is_code_Valid() const;

    MDGetPlaylistDetail_200_response_playlist getPlaylist() const;
    void setPlaylist(const MDGetPlaylistDetail_200_response_playlist &playlist);
    bool is_playlist_Set() const;
    bool is_playlist_Valid() const;

    QList<MDGetPlaylistDetail_200_response_privileges_inner> getPrivileges() const;
    void setPrivileges(const QList<MDGetPlaylistDetail_200_response_privileges_inner> &privileges);
    bool is_privileges_Set() const;
    bool is_privileges_Valid() const;

    qint32 getFromUserCount() const;
    void setFromUserCount(const qint32 &from_user_count);
    bool is_from_user_count_Set() const;
    bool is_from_user_count_Valid() const;

    qint32 getTrialMode() const;
    void setTrialMode(const qint32 &trial_mode);
    bool is_trial_mode_Set() const;
    bool is_trial_mode_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_code;
    bool m_code_isSet;
    bool m_code_isValid;

    MDGetPlaylistDetail_200_response_playlist m_playlist;
    bool m_playlist_isSet;
    bool m_playlist_isValid;

    QList<MDGetPlaylistDetail_200_response_privileges_inner> m_privileges;
    bool m_privileges_isSet;
    bool m_privileges_isValid;

    qint32 m_from_user_count;
    bool m_from_user_count_isSet;
    bool m_from_user_count_isValid;

    qint32 m_trial_mode;
    bool m_trial_mode_isSet;
    bool m_trial_mode_isValid;
};

} // namespace MelodixAPI

Q_DECLARE_METATYPE(MelodixAPI::MDGetPlaylistDetail_200_response)

#endif // MDGetPlaylistDetail_200_response_H
