/**
 * MelodixAPI
 * Melodix API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * MDGetArtistDetail_200_response_data_user.h
 *
 * 
 */

#ifndef MDGetArtistDetail_200_response_data_user_H
#define MDGetArtistDetail_200_response_data_user_H

#include <QJsonObject>

#include <QString>

#include "MDEnum.h"
#include "MDObject.h"

namespace MelodixAPI {

class MDGetArtistDetail_200_response_data_user : public MDObject {
public:
    MDGetArtistDetail_200_response_data_user();
    MDGetArtistDetail_200_response_data_user(QString json);
    ~MDGetArtistDetail_200_response_data_user() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBackgroundUrl() const;
    void setBackgroundUrl(const QString &background_url);
    bool is_background_url_Set() const;
    bool is_background_url_Valid() const;

    qint32 getBirthday() const;
    void setBirthday(const qint32 &birthday);
    bool is_birthday_Set() const;
    bool is_birthday_Valid() const;

    QString getDetailDescription() const;
    void setDetailDescription(const QString &detail_description);
    bool is_detail_description_Set() const;
    bool is_detail_description_Valid() const;

    bool isAuthenticated() const;
    void setAuthenticated(const bool &authenticated);
    bool is_authenticated_Set() const;
    bool is_authenticated_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getNickname() const;
    void setNickname(const QString &nickname);
    bool is_nickname_Set() const;
    bool is_nickname_Valid() const;

    QString getAvatarUrl() const;
    void setAvatarUrl(const QString &avatar_url);
    bool is_avatar_url_Set() const;
    bool is_avatar_url_Valid() const;

    qint32 getAccountType() const;
    void setAccountType(const qint32 &account_type);
    bool is_account_type_Set() const;
    bool is_account_type_Valid() const;

    QString getUserName() const;
    void setUserName(const QString &user_name);
    bool is_user_name_Set() const;
    bool is_user_name_Valid() const;

    bool isFollowed() const;
    void setFollowed(const bool &followed);
    bool is_followed_Set() const;
    bool is_followed_Valid() const;

    qint32 getUserId() const;
    void setUserId(const qint32 &user_id);
    bool is_user_id_Set() const;
    bool is_user_id_Valid() const;

    qint32 getCreateTime() const;
    void setCreateTime(const qint32 &create_time);
    bool is_create_time_Set() const;
    bool is_create_time_Valid() const;

    bool isAnchor() const;
    void setAnchor(const bool &anchor);
    bool is_anchor_Set() const;
    bool is_anchor_Valid() const;

    qint32 getBackgroundImgId() const;
    void setBackgroundImgId(const qint32 &background_img_id);
    bool is_background_img_id_Set() const;
    bool is_background_img_id_Valid() const;

    qint32 getUserType() const;
    void setUserType(const qint32 &user_type);
    bool is_user_type_Set() const;
    bool is_user_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_background_url;
    bool m_background_url_isSet;
    bool m_background_url_isValid;

    qint32 m_birthday;
    bool m_birthday_isSet;
    bool m_birthday_isValid;

    QString m_detail_description;
    bool m_detail_description_isSet;
    bool m_detail_description_isValid;

    bool m_authenticated;
    bool m_authenticated_isSet;
    bool m_authenticated_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_nickname;
    bool m_nickname_isSet;
    bool m_nickname_isValid;

    QString m_avatar_url;
    bool m_avatar_url_isSet;
    bool m_avatar_url_isValid;

    qint32 m_account_type;
    bool m_account_type_isSet;
    bool m_account_type_isValid;

    QString m_user_name;
    bool m_user_name_isSet;
    bool m_user_name_isValid;

    bool m_followed;
    bool m_followed_isSet;
    bool m_followed_isValid;

    qint32 m_user_id;
    bool m_user_id_isSet;
    bool m_user_id_isValid;

    qint32 m_create_time;
    bool m_create_time_isSet;
    bool m_create_time_isValid;

    bool m_anchor;
    bool m_anchor_isSet;
    bool m_anchor_isValid;

    qint32 m_background_img_id;
    bool m_background_img_id_isSet;
    bool m_background_img_id_isValid;

    qint32 m_user_type;
    bool m_user_type_isSet;
    bool m_user_type_isValid;
};

} // namespace MelodixAPI

Q_DECLARE_METATYPE(MelodixAPI::MDGetArtistDetail_200_response_data_user)

#endif // MDGetArtistDetail_200_response_data_user_H
