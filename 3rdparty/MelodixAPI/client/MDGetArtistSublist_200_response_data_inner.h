/**
 * MelodixAPI
 * Melodix API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * MDGetArtistSublist_200_response_data_inner.h
 *
 * 
 */

#ifndef MDGetArtistSublist_200_response_data_inner_H
#define MDGetArtistSublist_200_response_data_inner_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "MDEnum.h"
#include "MDObject.h"

namespace MelodixAPI {

class MDGetArtistSublist_200_response_data_inner : public MDObject {
public:
    MDGetArtistSublist_200_response_data_inner();
    MDGetArtistSublist_200_response_data_inner(QString json);
    ~MDGetArtistSublist_200_response_data_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getInfo() const;
    void setInfo(const QString &info);
    bool is_info_Set() const;
    bool is_info_Valid() const;

    double getId() const;
    void setId(const double &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<QString> getAlias() const;
    void setAlias(const QList<QString> &alias);
    bool is_alias_Set() const;
    bool is_alias_Valid() const;

    qint32 getAlbumSize() const;
    void setAlbumSize(const qint32 &album_size);
    bool is_album_size_Set() const;
    bool is_album_size_Valid() const;

    qint32 getMvSize() const;
    void setMvSize(const qint32 &mv_size);
    bool is_mv_size_Set() const;
    bool is_mv_size_Valid() const;

    qint32 getPicId() const;
    void setPicId(const qint32 &pic_id);
    bool is_pic_id_Set() const;
    bool is_pic_id_Valid() const;

    QString getPicUrl() const;
    void setPicUrl(const QString &pic_url);
    bool is_pic_url_Set() const;
    bool is_pic_url_Valid() const;

    QString getImg1v1Url() const;
    void setImg1v1Url(const QString &img1v1_url);
    bool is_img1v1_url_Set() const;
    bool is_img1v1_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_info;
    bool m_info_isSet;
    bool m_info_isValid;

    double m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<QString> m_alias;
    bool m_alias_isSet;
    bool m_alias_isValid;

    qint32 m_album_size;
    bool m_album_size_isSet;
    bool m_album_size_isValid;

    qint32 m_mv_size;
    bool m_mv_size_isSet;
    bool m_mv_size_isValid;

    qint32 m_pic_id;
    bool m_pic_id_isSet;
    bool m_pic_id_isValid;

    QString m_pic_url;
    bool m_pic_url_isSet;
    bool m_pic_url_isValid;

    QString m_img1v1_url;
    bool m_img1v1_url_isSet;
    bool m_img1v1_url_isValid;
};

} // namespace MelodixAPI

Q_DECLARE_METATYPE(MelodixAPI::MDGetArtistSublist_200_response_data_inner)

#endif // MDGetArtistSublist_200_response_data_inner_H
