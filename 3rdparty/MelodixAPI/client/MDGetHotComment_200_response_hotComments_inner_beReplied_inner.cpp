/**
 * MelodixAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "MDGetHotComment_200_response_hotComments_inner_beReplied_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "MDHelpers.h"

namespace MelodixAPI {

MDGetHotComment_200_response_hotComments_inner_beReplied_inner::MDGetHotComment_200_response_hotComments_inner_beReplied_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

MDGetHotComment_200_response_hotComments_inner_beReplied_inner::MDGetHotComment_200_response_hotComments_inner_beReplied_inner() {
    this->initializeModel();
}

MDGetHotComment_200_response_hotComments_inner_beReplied_inner::~MDGetHotComment_200_response_hotComments_inner_beReplied_inner() {}

void MDGetHotComment_200_response_hotComments_inner_beReplied_inner::initializeModel() {

    m_user_isSet = false;
    m_user_isValid = false;

    m_be_replied_comment_id_isSet = false;
    m_be_replied_comment_id_isValid = false;

    m_content_isSet = false;
    m_content_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_ip_location_isSet = false;
    m_ip_location_isValid = false;
}

void MDGetHotComment_200_response_hotComments_inner_beReplied_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void MDGetHotComment_200_response_hotComments_inner_beReplied_inner::fromJsonObject(QJsonObject json) {

    m_user_isValid = ::MelodixAPI::fromJsonValue(m_user, json[QString("user")]);
    m_user_isSet = !json[QString("user")].isNull() && m_user_isValid;

    m_be_replied_comment_id_isValid = ::MelodixAPI::fromJsonValue(m_be_replied_comment_id, json[QString("beRepliedCommentId")]);
    m_be_replied_comment_id_isSet = !json[QString("beRepliedCommentId")].isNull() && m_be_replied_comment_id_isValid;

    m_content_isValid = ::MelodixAPI::fromJsonValue(m_content, json[QString("content")]);
    m_content_isSet = !json[QString("content")].isNull() && m_content_isValid;

    m_status_isValid = ::MelodixAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_ip_location_isValid = ::MelodixAPI::fromJsonValue(m_ip_location, json[QString("ipLocation")]);
    m_ip_location_isSet = !json[QString("ipLocation")].isNull() && m_ip_location_isValid;
}

QString MDGetHotComment_200_response_hotComments_inner_beReplied_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject MDGetHotComment_200_response_hotComments_inner_beReplied_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_user.isSet()) {
        obj.insert(QString("user"), ::MelodixAPI::toJsonValue(m_user));
    }
    if (m_be_replied_comment_id_isSet) {
        obj.insert(QString("beRepliedCommentId"), ::MelodixAPI::toJsonValue(m_be_replied_comment_id));
    }
    if (m_content_isSet) {
        obj.insert(QString("content"), ::MelodixAPI::toJsonValue(m_content));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::MelodixAPI::toJsonValue(m_status));
    }
    if (m_ip_location.isSet()) {
        obj.insert(QString("ipLocation"), ::MelodixAPI::toJsonValue(m_ip_location));
    }
    return obj;
}

MDGetHotComment_200_response_hotComments_inner_beReplied_inner_user MDGetHotComment_200_response_hotComments_inner_beReplied_inner::getUser() const {
    return m_user;
}
void MDGetHotComment_200_response_hotComments_inner_beReplied_inner::setUser(const MDGetHotComment_200_response_hotComments_inner_beReplied_inner_user &user) {
    m_user = user;
    m_user_isSet = true;
}

bool MDGetHotComment_200_response_hotComments_inner_beReplied_inner::is_user_Set() const{
    return m_user_isSet;
}

bool MDGetHotComment_200_response_hotComments_inner_beReplied_inner::is_user_Valid() const{
    return m_user_isValid;
}

qint32 MDGetHotComment_200_response_hotComments_inner_beReplied_inner::getBeRepliedCommentId() const {
    return m_be_replied_comment_id;
}
void MDGetHotComment_200_response_hotComments_inner_beReplied_inner::setBeRepliedCommentId(const qint32 &be_replied_comment_id) {
    m_be_replied_comment_id = be_replied_comment_id;
    m_be_replied_comment_id_isSet = true;
}

bool MDGetHotComment_200_response_hotComments_inner_beReplied_inner::is_be_replied_comment_id_Set() const{
    return m_be_replied_comment_id_isSet;
}

bool MDGetHotComment_200_response_hotComments_inner_beReplied_inner::is_be_replied_comment_id_Valid() const{
    return m_be_replied_comment_id_isValid;
}

QString MDGetHotComment_200_response_hotComments_inner_beReplied_inner::getContent() const {
    return m_content;
}
void MDGetHotComment_200_response_hotComments_inner_beReplied_inner::setContent(const QString &content) {
    m_content = content;
    m_content_isSet = true;
}

bool MDGetHotComment_200_response_hotComments_inner_beReplied_inner::is_content_Set() const{
    return m_content_isSet;
}

bool MDGetHotComment_200_response_hotComments_inner_beReplied_inner::is_content_Valid() const{
    return m_content_isValid;
}

qint32 MDGetHotComment_200_response_hotComments_inner_beReplied_inner::getStatus() const {
    return m_status;
}
void MDGetHotComment_200_response_hotComments_inner_beReplied_inner::setStatus(const qint32 &status) {
    m_status = status;
    m_status_isSet = true;
}

bool MDGetHotComment_200_response_hotComments_inner_beReplied_inner::is_status_Set() const{
    return m_status_isSet;
}

bool MDGetHotComment_200_response_hotComments_inner_beReplied_inner::is_status_Valid() const{
    return m_status_isValid;
}

MDGetHotComment_200_response_hotComments_inner_beReplied_inner_ipLocation MDGetHotComment_200_response_hotComments_inner_beReplied_inner::getIpLocation() const {
    return m_ip_location;
}
void MDGetHotComment_200_response_hotComments_inner_beReplied_inner::setIpLocation(const MDGetHotComment_200_response_hotComments_inner_beReplied_inner_ipLocation &ip_location) {
    m_ip_location = ip_location;
    m_ip_location_isSet = true;
}

bool MDGetHotComment_200_response_hotComments_inner_beReplied_inner::is_ip_location_Set() const{
    return m_ip_location_isSet;
}

bool MDGetHotComment_200_response_hotComments_inner_beReplied_inner::is_ip_location_Valid() const{
    return m_ip_location_isValid;
}

bool MDGetHotComment_200_response_hotComments_inner_beReplied_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_user.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_be_replied_comment_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_content_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ip_location.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool MDGetHotComment_200_response_hotComments_inner_beReplied_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_user_isValid && m_be_replied_comment_id_isValid && m_content_isValid && m_status_isValid && m_ip_location_isValid && true;
}

} // namespace MelodixAPI
