/**
 * MelodixAPI
 * Melodix API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "MDGetLikeSongId_200_response.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "MDHelpers.h"

namespace MelodixAPI {

MDGetLikeSongId_200_response::MDGetLikeSongId_200_response(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

MDGetLikeSongId_200_response::MDGetLikeSongId_200_response() {
    this->initializeModel();
}

MDGetLikeSongId_200_response::~MDGetLikeSongId_200_response() {}

void MDGetLikeSongId_200_response::initializeModel() {

    m_ids_isSet = false;
    m_ids_isValid = false;

    m_check_point_isSet = false;
    m_check_point_isValid = false;

    m_code_isSet = false;
    m_code_isValid = false;
}

void MDGetLikeSongId_200_response::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void MDGetLikeSongId_200_response::fromJsonObject(QJsonObject json) {

    m_ids_isValid = ::MelodixAPI::fromJsonValue(m_ids, json[QString("ids")]);
    m_ids_isSet = !json[QString("ids")].isNull() && m_ids_isValid;

    m_check_point_isValid = ::MelodixAPI::fromJsonValue(m_check_point, json[QString("checkPoint")]);
    m_check_point_isSet = !json[QString("checkPoint")].isNull() && m_check_point_isValid;

    m_code_isValid = ::MelodixAPI::fromJsonValue(m_code, json[QString("code")]);
    m_code_isSet = !json[QString("code")].isNull() && m_code_isValid;
}

QString MDGetLikeSongId_200_response::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject MDGetLikeSongId_200_response::asJsonObject() const {
    QJsonObject obj;
    if (m_ids.size() > 0) {
        obj.insert(QString("ids"), ::MelodixAPI::toJsonValue(m_ids));
    }
    if (m_check_point_isSet) {
        obj.insert(QString("checkPoint"), ::MelodixAPI::toJsonValue(m_check_point));
    }
    if (m_code_isSet) {
        obj.insert(QString("code"), ::MelodixAPI::toJsonValue(m_code));
    }
    return obj;
}

QList<qint32> MDGetLikeSongId_200_response::getIds() const {
    return m_ids;
}
void MDGetLikeSongId_200_response::setIds(const QList<qint32> &ids) {
    m_ids = ids;
    m_ids_isSet = true;
}

bool MDGetLikeSongId_200_response::is_ids_Set() const{
    return m_ids_isSet;
}

bool MDGetLikeSongId_200_response::is_ids_Valid() const{
    return m_ids_isValid;
}

qint32 MDGetLikeSongId_200_response::getCheckPoint() const {
    return m_check_point;
}
void MDGetLikeSongId_200_response::setCheckPoint(const qint32 &check_point) {
    m_check_point = check_point;
    m_check_point_isSet = true;
}

bool MDGetLikeSongId_200_response::is_check_point_Set() const{
    return m_check_point_isSet;
}

bool MDGetLikeSongId_200_response::is_check_point_Valid() const{
    return m_check_point_isValid;
}

qint32 MDGetLikeSongId_200_response::getCode() const {
    return m_code;
}
void MDGetLikeSongId_200_response::setCode(const qint32 &code) {
    m_code = code;
    m_code_isSet = true;
}

bool MDGetLikeSongId_200_response::is_code_Set() const{
    return m_code_isSet;
}

bool MDGetLikeSongId_200_response::is_code_Valid() const{
    return m_code_isValid;
}

bool MDGetLikeSongId_200_response::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_check_point_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_code_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool MDGetLikeSongId_200_response::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_ids_isValid && m_check_point_isValid && m_code_isValid && true;
}

} // namespace MelodixAPI
