/**
 * MelodixAPI
 * Melodix API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * MDGetArtistSublist_200_response.h
 *
 * 
 */

#ifndef MDGetArtistSublist_200_response_H
#define MDGetArtistSublist_200_response_H

#include <QJsonObject>

#include "MDGetArtistSublist_200_response_data_inner.h"
#include <QList>

#include "MDEnum.h"
#include "MDObject.h"

namespace MelodixAPI {
class MDGetArtistSublist_200_response_data_inner;

class MDGetArtistSublist_200_response : public MDObject {
public:
    MDGetArtistSublist_200_response();
    MDGetArtistSublist_200_response(QString json);
    ~MDGetArtistSublist_200_response() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<MDGetArtistSublist_200_response_data_inner> getData() const;
    void setData(const QList<MDGetArtistSublist_200_response_data_inner> &data);
    bool is_data_Set() const;
    bool is_data_Valid() const;

    bool isHasMore() const;
    void setHasMore(const bool &has_more);
    bool is_has_more_Set() const;
    bool is_has_more_Valid() const;

    qint32 getCount() const;
    void setCount(const qint32 &count);
    bool is_count_Set() const;
    bool is_count_Valid() const;

    qint32 getCode() const;
    void setCode(const qint32 &code);
    bool is_code_Set() const;
    bool is_code_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<MDGetArtistSublist_200_response_data_inner> m_data;
    bool m_data_isSet;
    bool m_data_isValid;

    bool m_has_more;
    bool m_has_more_isSet;
    bool m_has_more_isValid;

    qint32 m_count;
    bool m_count_isSet;
    bool m_count_isValid;

    qint32 m_code;
    bool m_code_isSet;
    bool m_code_isValid;
};

} // namespace MelodixAPI

Q_DECLARE_METATYPE(MelodixAPI::MDGetArtistSublist_200_response)

#endif // MDGetArtistSublist_200_response_H
