/**
 * MelodixAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * MDGetTopPlaylist_200_response.h
 *
 * 
 */

#ifndef MDGetTopPlaylist_200_response_H
#define MDGetTopPlaylist_200_response_H

#include <QJsonObject>

#include "MDGetTopPlaylist_200_response_playlists_inner.h"
#include <QList>
#include <QString>

#include "MDEnum.h"
#include "MDObject.h"

namespace MelodixAPI {
class MDGetTopPlaylist_200_response_playlists_inner;

class MDGetTopPlaylist_200_response : public MDObject {
public:
    MDGetTopPlaylist_200_response();
    MDGetTopPlaylist_200_response(QString json);
    ~MDGetTopPlaylist_200_response() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<MDGetTopPlaylist_200_response_playlists_inner> getPlaylists() const;
    void setPlaylists(const QList<MDGetTopPlaylist_200_response_playlists_inner> &playlists);
    bool is_playlists_Set() const;
    bool is_playlists_Valid() const;

    qint32 getTotal() const;
    void setTotal(const qint32 &total);
    bool is_total_Set() const;
    bool is_total_Valid() const;

    qint32 getCode() const;
    void setCode(const qint32 &code);
    bool is_code_Set() const;
    bool is_code_Valid() const;

    bool isMore() const;
    void setMore(const bool &more);
    bool is_more_Set() const;
    bool is_more_Valid() const;

    QString getCat() const;
    void setCat(const QString &cat);
    bool is_cat_Set() const;
    bool is_cat_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<MDGetTopPlaylist_200_response_playlists_inner> m_playlists;
    bool m_playlists_isSet;
    bool m_playlists_isValid;

    qint32 m_total;
    bool m_total_isSet;
    bool m_total_isValid;

    qint32 m_code;
    bool m_code_isSet;
    bool m_code_isValid;

    bool m_more;
    bool m_more_isSet;
    bool m_more_isValid;

    QString m_cat;
    bool m_cat_isSet;
    bool m_cat_isValid;
};

} // namespace MelodixAPI

Q_DECLARE_METATYPE(MelodixAPI::MDGetTopPlaylist_200_response)

#endif // MDGetTopPlaylist_200_response_H
