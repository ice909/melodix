/**
 * MelodixAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * MDGetRecommendedMv_200_response_result_inner.h
 *
 * 
 */

#ifndef MDGetRecommendedMv_200_response_result_inner_H
#define MDGetRecommendedMv_200_response_result_inner_H

#include <QJsonObject>

#include "MDGetRecommendedMv_200_response_result_inner_artists_inner.h"
#include <QList>
#include <QString>

#include "MDEnum.h"
#include "MDObject.h"

namespace MelodixAPI {
class MDGetRecommendedMv_200_response_result_inner_artists_inner;

class MDGetRecommendedMv_200_response_result_inner : public MDObject {
public:
    MDGetRecommendedMv_200_response_result_inner();
    MDGetRecommendedMv_200_response_result_inner(QString json);
    ~MDGetRecommendedMv_200_response_result_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    qint32 getType() const;
    void setType(const qint32 &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getCopywriter() const;
    void setCopywriter(const QString &copywriter);
    bool is_copywriter_Set() const;
    bool is_copywriter_Valid() const;

    QString getPicUrl() const;
    void setPicUrl(const QString &pic_url);
    bool is_pic_url_Set() const;
    bool is_pic_url_Valid() const;

    bool isCanDislike() const;
    void setCanDislike(const bool &can_dislike);
    bool is_can_dislike_Set() const;
    bool is_can_dislike_Valid() const;

    qint32 getDuration() const;
    void setDuration(const qint32 &duration);
    bool is_duration_Set() const;
    bool is_duration_Valid() const;

    qint32 getPlayCount() const;
    void setPlayCount(const qint32 &play_count);
    bool is_play_count_Set() const;
    bool is_play_count_Valid() const;

    bool isSubed() const;
    void setSubed(const bool &subed);
    bool is_subed_Set() const;
    bool is_subed_Valid() const;

    QList<MDGetRecommendedMv_200_response_result_inner_artists_inner> getArtists() const;
    void setArtists(const QList<MDGetRecommendedMv_200_response_result_inner_artists_inner> &artists);
    bool is_artists_Set() const;
    bool is_artists_Valid() const;

    QString getArtistName() const;
    void setArtistName(const QString &artist_name);
    bool is_artist_name_Set() const;
    bool is_artist_name_Valid() const;

    qint32 getArtistId() const;
    void setArtistId(const qint32 &artist_id);
    bool is_artist_id_Set() const;
    bool is_artist_id_Valid() const;

    QString getAlg() const;
    void setAlg(const QString &alg);
    bool is_alg_Set() const;
    bool is_alg_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    qint32 m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_copywriter;
    bool m_copywriter_isSet;
    bool m_copywriter_isValid;

    QString m_pic_url;
    bool m_pic_url_isSet;
    bool m_pic_url_isValid;

    bool m_can_dislike;
    bool m_can_dislike_isSet;
    bool m_can_dislike_isValid;

    qint32 m_duration;
    bool m_duration_isSet;
    bool m_duration_isValid;

    qint32 m_play_count;
    bool m_play_count_isSet;
    bool m_play_count_isValid;

    bool m_subed;
    bool m_subed_isSet;
    bool m_subed_isValid;

    QList<MDGetRecommendedMv_200_response_result_inner_artists_inner> m_artists;
    bool m_artists_isSet;
    bool m_artists_isValid;

    QString m_artist_name;
    bool m_artist_name_isSet;
    bool m_artist_name_isValid;

    qint32 m_artist_id;
    bool m_artist_id_isSet;
    bool m_artist_id_isValid;

    QString m_alg;
    bool m_alg_isSet;
    bool m_alg_isValid;
};

} // namespace MelodixAPI

Q_DECLARE_METATYPE(MelodixAPI::MDGetRecommendedMv_200_response_result_inner)

#endif // MDGetRecommendedMv_200_response_result_inner_H
