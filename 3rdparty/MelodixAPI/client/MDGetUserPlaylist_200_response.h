/**
 * MelodixAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * MDGetUserPlaylist_200_response.h
 *
 * 
 */

#ifndef MDGetUserPlaylist_200_response_H
#define MDGetUserPlaylist_200_response_H

#include <QJsonObject>

#include "MDGetUserPlaylist_200_response_playlist_inner.h"
#include <QList>
#include <QString>

#include "MDEnum.h"
#include "MDObject.h"

namespace MelodixAPI {
class MDGetUserPlaylist_200_response_playlist_inner;

class MDGetUserPlaylist_200_response : public MDObject {
public:
    MDGetUserPlaylist_200_response();
    MDGetUserPlaylist_200_response(QString json);
    ~MDGetUserPlaylist_200_response() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getVersion() const;
    void setVersion(const QString &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    bool isMore() const;
    void setMore(const bool &more);
    bool is_more_Set() const;
    bool is_more_Valid() const;

    QList<MDGetUserPlaylist_200_response_playlist_inner> getPlaylist() const;
    void setPlaylist(const QList<MDGetUserPlaylist_200_response_playlist_inner> &playlist);
    bool is_playlist_Set() const;
    bool is_playlist_Valid() const;

    qint32 getCode() const;
    void setCode(const qint32 &code);
    bool is_code_Set() const;
    bool is_code_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_version;
    bool m_version_isSet;
    bool m_version_isValid;

    bool m_more;
    bool m_more_isSet;
    bool m_more_isValid;

    QList<MDGetUserPlaylist_200_response_playlist_inner> m_playlist;
    bool m_playlist_isSet;
    bool m_playlist_isValid;

    qint32 m_code;
    bool m_code_isSet;
    bool m_code_isValid;
};

} // namespace MelodixAPI

Q_DECLARE_METATYPE(MelodixAPI::MDGetUserPlaylist_200_response)

#endif // MDGetUserPlaylist_200_response_H
