/**
 * MelodixAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * MDGetHotComment_200_response_hotComments_inner.h
 *
 * 
 */

#ifndef MDGetHotComment_200_response_hotComments_inner_H
#define MDGetHotComment_200_response_hotComments_inner_H

#include <QJsonObject>

#include "MDGetHotComment_200_response_hotComments_inner_beReplied_inner.h"
#include "MDGetHotComment_200_response_hotComments_inner_beReplied_inner_ipLocation.h"
#include "MDGetHotComment_200_response_hotComments_inner_pendantData.h"
#include "MDGetHotComment_200_response_hotComments_inner_user.h"
#include "MDObject.h"
#include <QList>
#include <QString>

#include "MDEnum.h"
#include "MDObject.h"

namespace MelodixAPI {
class MDGetHotComment_200_response_hotComments_inner_user;
class MDGetHotComment_200_response_hotComments_inner_beReplied_inner;
class MDGetHotComment_200_response_hotComments_inner_pendantData;
class MDGetHotComment_200_response_hotComments_inner_beReplied_inner_ipLocation;

class MDGetHotComment_200_response_hotComments_inner : public MDObject {
public:
    MDGetHotComment_200_response_hotComments_inner();
    MDGetHotComment_200_response_hotComments_inner(QString json);
    ~MDGetHotComment_200_response_hotComments_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    MDGetHotComment_200_response_hotComments_inner_user getUser() const;
    void setUser(const MDGetHotComment_200_response_hotComments_inner_user &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    QList<MDGetHotComment_200_response_hotComments_inner_beReplied_inner> getBeReplied() const;
    void setBeReplied(const QList<MDGetHotComment_200_response_hotComments_inner_beReplied_inner> &be_replied);
    bool is_be_replied_Set() const;
    bool is_be_replied_Valid() const;

    MDGetHotComment_200_response_hotComments_inner_pendantData getPendantData() const;
    void setPendantData(const MDGetHotComment_200_response_hotComments_inner_pendantData &pendant_data);
    bool is_pendant_data_Set() const;
    bool is_pendant_data_Valid() const;

    qint32 getStatus() const;
    void setStatus(const qint32 &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    qint32 getCommentId() const;
    void setCommentId(const qint32 &comment_id);
    bool is_comment_id_Set() const;
    bool is_comment_id_Valid() const;

    QString getContent() const;
    void setContent(const QString &content);
    bool is_content_Set() const;
    bool is_content_Valid() const;

    qint32 getTime() const;
    void setTime(const qint32 &time);
    bool is_time_Set() const;
    bool is_time_Valid() const;

    QString getTimeStr() const;
    void setTimeStr(const QString &time_str);
    bool is_time_str_Set() const;
    bool is_time_str_Valid() const;

    bool isNeedDisplayTime() const;
    void setNeedDisplayTime(const bool &need_display_time);
    bool is_need_display_time_Set() const;
    bool is_need_display_time_Valid() const;

    qint32 getLikedCount() const;
    void setLikedCount(const qint32 &liked_count);
    bool is_liked_count_Set() const;
    bool is_liked_count_Valid() const;

    qint32 getCommentLocationType() const;
    void setCommentLocationType(const qint32 &comment_location_type);
    bool is_comment_location_type_Set() const;
    bool is_comment_location_type_Valid() const;

    qint32 getParentCommentId() const;
    void setParentCommentId(const qint32 &parent_comment_id);
    bool is_parent_comment_id_Set() const;
    bool is_parent_comment_id_Valid() const;

    MDObject getDecoration() const;
    void setDecoration(const MDObject &decoration);
    bool is_decoration_Set() const;
    bool is_decoration_Valid() const;

    MDGetHotComment_200_response_hotComments_inner_beReplied_inner_ipLocation getIpLocation() const;
    void setIpLocation(const MDGetHotComment_200_response_hotComments_inner_beReplied_inner_ipLocation &ip_location);
    bool is_ip_location_Set() const;
    bool is_ip_location_Valid() const;

    bool isOwner() const;
    void setOwner(const bool &owner);
    bool is_owner_Set() const;
    bool is_owner_Valid() const;

    bool isLiked() const;
    void setLiked(const bool &liked);
    bool is_liked_Set() const;
    bool is_liked_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    MDGetHotComment_200_response_hotComments_inner_user m_user;
    bool m_user_isSet;
    bool m_user_isValid;

    QList<MDGetHotComment_200_response_hotComments_inner_beReplied_inner> m_be_replied;
    bool m_be_replied_isSet;
    bool m_be_replied_isValid;

    MDGetHotComment_200_response_hotComments_inner_pendantData m_pendant_data;
    bool m_pendant_data_isSet;
    bool m_pendant_data_isValid;

    qint32 m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    qint32 m_comment_id;
    bool m_comment_id_isSet;
    bool m_comment_id_isValid;

    QString m_content;
    bool m_content_isSet;
    bool m_content_isValid;

    qint32 m_time;
    bool m_time_isSet;
    bool m_time_isValid;

    QString m_time_str;
    bool m_time_str_isSet;
    bool m_time_str_isValid;

    bool m_need_display_time;
    bool m_need_display_time_isSet;
    bool m_need_display_time_isValid;

    qint32 m_liked_count;
    bool m_liked_count_isSet;
    bool m_liked_count_isValid;

    qint32 m_comment_location_type;
    bool m_comment_location_type_isSet;
    bool m_comment_location_type_isValid;

    qint32 m_parent_comment_id;
    bool m_parent_comment_id_isSet;
    bool m_parent_comment_id_isValid;

    MDObject m_decoration;
    bool m_decoration_isSet;
    bool m_decoration_isValid;

    MDGetHotComment_200_response_hotComments_inner_beReplied_inner_ipLocation m_ip_location;
    bool m_ip_location_isSet;
    bool m_ip_location_isValid;

    bool m_owner;
    bool m_owner_isSet;
    bool m_owner_isValid;

    bool m_liked;
    bool m_liked_isSet;
    bool m_liked_isValid;
};

} // namespace MelodixAPI

Q_DECLARE_METATYPE(MelodixAPI::MDGetHotComment_200_response_hotComments_inner)

#endif // MDGetHotComment_200_response_hotComments_inner_H
