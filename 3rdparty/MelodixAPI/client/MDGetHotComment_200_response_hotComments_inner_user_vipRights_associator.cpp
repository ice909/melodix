/**
 * MelodixAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "MDGetHotComment_200_response_hotComments_inner_user_vipRights_associator.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "MDHelpers.h"

namespace MelodixAPI {

MDGetHotComment_200_response_hotComments_inner_user_vipRights_associator::MDGetHotComment_200_response_hotComments_inner_user_vipRights_associator(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

MDGetHotComment_200_response_hotComments_inner_user_vipRights_associator::MDGetHotComment_200_response_hotComments_inner_user_vipRights_associator() {
    this->initializeModel();
}

MDGetHotComment_200_response_hotComments_inner_user_vipRights_associator::~MDGetHotComment_200_response_hotComments_inner_user_vipRights_associator() {}

void MDGetHotComment_200_response_hotComments_inner_user_vipRights_associator::initializeModel() {

    m_vip_code_isSet = false;
    m_vip_code_isValid = false;

    m_rights_isSet = false;
    m_rights_isValid = false;

    m_icon_url_isSet = false;
    m_icon_url_isValid = false;
}

void MDGetHotComment_200_response_hotComments_inner_user_vipRights_associator::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void MDGetHotComment_200_response_hotComments_inner_user_vipRights_associator::fromJsonObject(QJsonObject json) {

    m_vip_code_isValid = ::MelodixAPI::fromJsonValue(m_vip_code, json[QString("vipCode")]);
    m_vip_code_isSet = !json[QString("vipCode")].isNull() && m_vip_code_isValid;

    m_rights_isValid = ::MelodixAPI::fromJsonValue(m_rights, json[QString("rights")]);
    m_rights_isSet = !json[QString("rights")].isNull() && m_rights_isValid;

    m_icon_url_isValid = ::MelodixAPI::fromJsonValue(m_icon_url, json[QString("iconUrl")]);
    m_icon_url_isSet = !json[QString("iconUrl")].isNull() && m_icon_url_isValid;
}

QString MDGetHotComment_200_response_hotComments_inner_user_vipRights_associator::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject MDGetHotComment_200_response_hotComments_inner_user_vipRights_associator::asJsonObject() const {
    QJsonObject obj;
    if (m_vip_code_isSet) {
        obj.insert(QString("vipCode"), ::MelodixAPI::toJsonValue(m_vip_code));
    }
    if (m_rights_isSet) {
        obj.insert(QString("rights"), ::MelodixAPI::toJsonValue(m_rights));
    }
    if (m_icon_url_isSet) {
        obj.insert(QString("iconUrl"), ::MelodixAPI::toJsonValue(m_icon_url));
    }
    return obj;
}

qint32 MDGetHotComment_200_response_hotComments_inner_user_vipRights_associator::getVipCode() const {
    return m_vip_code;
}
void MDGetHotComment_200_response_hotComments_inner_user_vipRights_associator::setVipCode(const qint32 &vip_code) {
    m_vip_code = vip_code;
    m_vip_code_isSet = true;
}

bool MDGetHotComment_200_response_hotComments_inner_user_vipRights_associator::is_vip_code_Set() const{
    return m_vip_code_isSet;
}

bool MDGetHotComment_200_response_hotComments_inner_user_vipRights_associator::is_vip_code_Valid() const{
    return m_vip_code_isValid;
}

bool MDGetHotComment_200_response_hotComments_inner_user_vipRights_associator::isRights() const {
    return m_rights;
}
void MDGetHotComment_200_response_hotComments_inner_user_vipRights_associator::setRights(const bool &rights) {
    m_rights = rights;
    m_rights_isSet = true;
}

bool MDGetHotComment_200_response_hotComments_inner_user_vipRights_associator::is_rights_Set() const{
    return m_rights_isSet;
}

bool MDGetHotComment_200_response_hotComments_inner_user_vipRights_associator::is_rights_Valid() const{
    return m_rights_isValid;
}

QString MDGetHotComment_200_response_hotComments_inner_user_vipRights_associator::getIconUrl() const {
    return m_icon_url;
}
void MDGetHotComment_200_response_hotComments_inner_user_vipRights_associator::setIconUrl(const QString &icon_url) {
    m_icon_url = icon_url;
    m_icon_url_isSet = true;
}

bool MDGetHotComment_200_response_hotComments_inner_user_vipRights_associator::is_icon_url_Set() const{
    return m_icon_url_isSet;
}

bool MDGetHotComment_200_response_hotComments_inner_user_vipRights_associator::is_icon_url_Valid() const{
    return m_icon_url_isValid;
}

bool MDGetHotComment_200_response_hotComments_inner_user_vipRights_associator::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_vip_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rights_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_icon_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool MDGetHotComment_200_response_hotComments_inner_user_vipRights_associator::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_vip_code_isValid && m_rights_isValid && m_icon_url_isValid && true;
}

} // namespace MelodixAPI
