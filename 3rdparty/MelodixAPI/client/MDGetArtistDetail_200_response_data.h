/**
 * MelodixAPI
 * Melodix API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * MDGetArtistDetail_200_response_data.h
 *
 * 
 */

#ifndef MDGetArtistDetail_200_response_data_H
#define MDGetArtistDetail_200_response_data_H

#include <QJsonObject>

#include "MDGetArtistDetail_200_response_data_artist.h"
#include "MDGetArtistDetail_200_response_data_identify.h"
#include "MDGetArtistDetail_200_response_data_secondaryExpertIdentiy_inner.h"
#include "MDGetArtistDetail_200_response_data_user.h"
#include "MDGetArtistDetail_200_response_data_vipRights.h"
#include <QList>

#include "MDEnum.h"
#include "MDObject.h"

namespace MelodixAPI {
class MDGetArtistDetail_200_response_data_vipRights;
class MDGetArtistDetail_200_response_data_identify;
class MDGetArtistDetail_200_response_data_artist;
class MDGetArtistDetail_200_response_data_secondaryExpertIdentiy_inner;
class MDGetArtistDetail_200_response_data_user;

class MDGetArtistDetail_200_response_data : public MDObject {
public:
    MDGetArtistDetail_200_response_data();
    MDGetArtistDetail_200_response_data(QString json);
    ~MDGetArtistDetail_200_response_data() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getVideoCount() const;
    void setVideoCount(const qint32 &video_count);
    bool is_video_count_Set() const;
    bool is_video_count_Valid() const;

    MDGetArtistDetail_200_response_data_vipRights getVipRights() const;
    void setVipRights(const MDGetArtistDetail_200_response_data_vipRights &vip_rights);
    bool is_vip_rights_Set() const;
    bool is_vip_rights_Valid() const;

    MDGetArtistDetail_200_response_data_identify getIdentify() const;
    void setIdentify(const MDGetArtistDetail_200_response_data_identify &identify);
    bool is_identify_Set() const;
    bool is_identify_Valid() const;

    MDGetArtistDetail_200_response_data_artist getArtist() const;
    void setArtist(const MDGetArtistDetail_200_response_data_artist &artist);
    bool is_artist_Set() const;
    bool is_artist_Valid() const;

    bool isBlacklist() const;
    void setBlacklist(const bool &blacklist);
    bool is_blacklist_Set() const;
    bool is_blacklist_Valid() const;

    qint32 getPreferShow() const;
    void setPreferShow(const qint32 &prefer_show);
    bool is_prefer_show_Set() const;
    bool is_prefer_show_Valid() const;

    bool isShowPriMsg() const;
    void setShowPriMsg(const bool &show_pri_msg);
    bool is_show_pri_msg_Set() const;
    bool is_show_pri_msg_Valid() const;

    QList<MDGetArtistDetail_200_response_data_secondaryExpertIdentiy_inner> getSecondaryExpertIdentiy() const;
    void setSecondaryExpertIdentiy(const QList<MDGetArtistDetail_200_response_data_secondaryExpertIdentiy_inner> &secondary_expert_identiy);
    bool is_secondary_expert_identiy_Set() const;
    bool is_secondary_expert_identiy_Valid() const;

    qint32 getEventCount() const;
    void setEventCount(const qint32 &event_count);
    bool is_event_count_Set() const;
    bool is_event_count_Valid() const;

    MDGetArtistDetail_200_response_data_user getUser() const;
    void setUser(const MDGetArtistDetail_200_response_data_user &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_video_count;
    bool m_video_count_isSet;
    bool m_video_count_isValid;

    MDGetArtistDetail_200_response_data_vipRights m_vip_rights;
    bool m_vip_rights_isSet;
    bool m_vip_rights_isValid;

    MDGetArtistDetail_200_response_data_identify m_identify;
    bool m_identify_isSet;
    bool m_identify_isValid;

    MDGetArtistDetail_200_response_data_artist m_artist;
    bool m_artist_isSet;
    bool m_artist_isValid;

    bool m_blacklist;
    bool m_blacklist_isSet;
    bool m_blacklist_isValid;

    qint32 m_prefer_show;
    bool m_prefer_show_isSet;
    bool m_prefer_show_isValid;

    bool m_show_pri_msg;
    bool m_show_pri_msg_isSet;
    bool m_show_pri_msg_isValid;

    QList<MDGetArtistDetail_200_response_data_secondaryExpertIdentiy_inner> m_secondary_expert_identiy;
    bool m_secondary_expert_identiy_isSet;
    bool m_secondary_expert_identiy_isValid;

    qint32 m_event_count;
    bool m_event_count_isSet;
    bool m_event_count_isValid;

    MDGetArtistDetail_200_response_data_user m_user;
    bool m_user_isSet;
    bool m_user_isValid;
};

} // namespace MelodixAPI

Q_DECLARE_METATYPE(MelodixAPI::MDGetArtistDetail_200_response_data)

#endif // MDGetArtistDetail_200_response_data_H
