/**
 * MelodixAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * MDGetArtistAlbum_200_response_artist.h
 *
 * 
 */

#ifndef MDGetArtistAlbum_200_response_artist_H
#define MDGetArtistAlbum_200_response_artist_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "MDEnum.h"
#include "MDObject.h"

namespace MelodixAPI {

class MDGetArtistAlbum_200_response_artist : public MDObject {
public:
    MDGetArtistAlbum_200_response_artist();
    MDGetArtistAlbum_200_response_artist(QString json);
    ~MDGetArtistAlbum_200_response_artist() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getImg1v1Id() const;
    void setImg1v1Id(const qint32 &img1v1_id);
    bool is_img1v1_id_Set() const;
    bool is_img1v1_id_Valid() const;

    qint32 getTopicPerson() const;
    void setTopicPerson(const qint32 &topic_person);
    bool is_topic_person_Set() const;
    bool is_topic_person_Valid() const;

    bool isFollowed() const;
    void setFollowed(const bool &followed);
    bool is_followed_Set() const;
    bool is_followed_Valid() const;

    QList<QString> getAlias() const;
    void setAlias(const QList<QString> &alias);
    bool is_alias_Set() const;
    bool is_alias_Valid() const;

    qint32 getPicId() const;
    void setPicId(const qint32 &pic_id);
    bool is_pic_id_Set() const;
    bool is_pic_id_Valid() const;

    QString getBriefDesc() const;
    void setBriefDesc(const QString &brief_desc);
    bool is_brief_desc_Set() const;
    bool is_brief_desc_Valid() const;

    qint32 getMusicSize() const;
    void setMusicSize(const qint32 &music_size);
    bool is_music_size_Set() const;
    bool is_music_size_Valid() const;

    qint32 getAlbumSize() const;
    void setAlbumSize(const qint32 &album_size);
    bool is_album_size_Set() const;
    bool is_album_size_Valid() const;

    QString getPicUrl() const;
    void setPicUrl(const QString &pic_url);
    bool is_pic_url_Set() const;
    bool is_pic_url_Valid() const;

    QString getImg1v1Url() const;
    void setImg1v1Url(const QString &img1v1_url);
    bool is_img1v1_url_Set() const;
    bool is_img1v1_url_Valid() const;

    QString getTrans() const;
    void setTrans(const QString &trans);
    bool is_trans_Set() const;
    bool is_trans_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getPicIdStr() const;
    void setPicIdStr(const QString &pic_id_str);
    bool is_pic_id_str_Set() const;
    bool is_pic_id_str_Valid() const;

    QString getImg1v1IdStr() const;
    void setImg1v1IdStr(const QString &img1v1_id_str);
    bool is_img1v1_id_str_Set() const;
    bool is_img1v1_id_str_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_img1v1_id;
    bool m_img1v1_id_isSet;
    bool m_img1v1_id_isValid;

    qint32 m_topic_person;
    bool m_topic_person_isSet;
    bool m_topic_person_isValid;

    bool m_followed;
    bool m_followed_isSet;
    bool m_followed_isValid;

    QList<QString> m_alias;
    bool m_alias_isSet;
    bool m_alias_isValid;

    qint32 m_pic_id;
    bool m_pic_id_isSet;
    bool m_pic_id_isValid;

    QString m_brief_desc;
    bool m_brief_desc_isSet;
    bool m_brief_desc_isValid;

    qint32 m_music_size;
    bool m_music_size_isSet;
    bool m_music_size_isValid;

    qint32 m_album_size;
    bool m_album_size_isSet;
    bool m_album_size_isValid;

    QString m_pic_url;
    bool m_pic_url_isSet;
    bool m_pic_url_isValid;

    QString m_img1v1_url;
    bool m_img1v1_url_isSet;
    bool m_img1v1_url_isValid;

    QString m_trans;
    bool m_trans_isSet;
    bool m_trans_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_pic_id_str;
    bool m_pic_id_str_isSet;
    bool m_pic_id_str_isValid;

    QString m_img1v1_id_str;
    bool m_img1v1_id_str_isSet;
    bool m_img1v1_id_str_isValid;
};

} // namespace MelodixAPI

Q_DECLARE_METATYPE(MelodixAPI::MDGetArtistAlbum_200_response_artist)

#endif // MDGetArtistAlbum_200_response_artist_H
