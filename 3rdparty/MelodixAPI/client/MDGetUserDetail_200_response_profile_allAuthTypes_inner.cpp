/**
 * MelodixAPI
 * Melodix API
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "MDGetUserDetail_200_response_profile_allAuthTypes_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "MDHelpers.h"

namespace MelodixAPI {

MDGetUserDetail_200_response_profile_allAuthTypes_inner::MDGetUserDetail_200_response_profile_allAuthTypes_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

MDGetUserDetail_200_response_profile_allAuthTypes_inner::MDGetUserDetail_200_response_profile_allAuthTypes_inner() {
    this->initializeModel();
}

MDGetUserDetail_200_response_profile_allAuthTypes_inner::~MDGetUserDetail_200_response_profile_allAuthTypes_inner() {}

void MDGetUserDetail_200_response_profile_allAuthTypes_inner::initializeModel() {

    m_type_isSet = false;
    m_type_isValid = false;

    m_desc_isSet = false;
    m_desc_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;
}

void MDGetUserDetail_200_response_profile_allAuthTypes_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void MDGetUserDetail_200_response_profile_allAuthTypes_inner::fromJsonObject(QJsonObject json) {

    m_type_isValid = ::MelodixAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;

    m_desc_isValid = ::MelodixAPI::fromJsonValue(m_desc, json[QString("desc")]);
    m_desc_isSet = !json[QString("desc")].isNull() && m_desc_isValid;

    m_tags_isValid = ::MelodixAPI::fromJsonValue(m_tags, json[QString("tags")]);
    m_tags_isSet = !json[QString("tags")].isNull() && m_tags_isValid;
}

QString MDGetUserDetail_200_response_profile_allAuthTypes_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject MDGetUserDetail_200_response_profile_allAuthTypes_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_type_isSet) {
        obj.insert(QString("type"), ::MelodixAPI::toJsonValue(m_type));
    }
    if (m_desc_isSet) {
        obj.insert(QString("desc"), ::MelodixAPI::toJsonValue(m_desc));
    }
    if (m_tags.size() > 0) {
        obj.insert(QString("tags"), ::MelodixAPI::toJsonValue(m_tags));
    }
    return obj;
}

qint32 MDGetUserDetail_200_response_profile_allAuthTypes_inner::getType() const {
    return m_type;
}
void MDGetUserDetail_200_response_profile_allAuthTypes_inner::setType(const qint32 &type) {
    m_type = type;
    m_type_isSet = true;
}

bool MDGetUserDetail_200_response_profile_allAuthTypes_inner::is_type_Set() const{
    return m_type_isSet;
}

bool MDGetUserDetail_200_response_profile_allAuthTypes_inner::is_type_Valid() const{
    return m_type_isValid;
}

QString MDGetUserDetail_200_response_profile_allAuthTypes_inner::getDesc() const {
    return m_desc;
}
void MDGetUserDetail_200_response_profile_allAuthTypes_inner::setDesc(const QString &desc) {
    m_desc = desc;
    m_desc_isSet = true;
}

bool MDGetUserDetail_200_response_profile_allAuthTypes_inner::is_desc_Set() const{
    return m_desc_isSet;
}

bool MDGetUserDetail_200_response_profile_allAuthTypes_inner::is_desc_Valid() const{
    return m_desc_isValid;
}

QList<QString> MDGetUserDetail_200_response_profile_allAuthTypes_inner::getTags() const {
    return m_tags;
}
void MDGetUserDetail_200_response_profile_allAuthTypes_inner::setTags(const QList<QString> &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool MDGetUserDetail_200_response_profile_allAuthTypes_inner::is_tags_Set() const{
    return m_tags_isSet;
}

bool MDGetUserDetail_200_response_profile_allAuthTypes_inner::is_tags_Valid() const{
    return m_tags_isValid;
}

bool MDGetUserDetail_200_response_profile_allAuthTypes_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_desc_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool MDGetUserDetail_200_response_profile_allAuthTypes_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace MelodixAPI
