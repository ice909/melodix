/**
 * MelodixAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * MDGetRecommendedNewSongs_200_response_result_inner.h
 *
 * 
 */

#ifndef MDGetRecommendedNewSongs_200_response_result_inner_H
#define MDGetRecommendedNewSongs_200_response_result_inner_H

#include <QJsonObject>

#include "MDGetRecommendedNewSongs_200_response_result_inner_song.h"
#include <QString>

#include "MDEnum.h"
#include "MDObject.h"

namespace MelodixAPI {
class MDGetRecommendedNewSongs_200_response_result_inner_song;

class MDGetRecommendedNewSongs_200_response_result_inner : public MDObject {
public:
    MDGetRecommendedNewSongs_200_response_result_inner();
    MDGetRecommendedNewSongs_200_response_result_inner(QString json);
    ~MDGetRecommendedNewSongs_200_response_result_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    qint32 getType() const;
    void setType(const qint32 &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getPicUrl() const;
    void setPicUrl(const QString &pic_url);
    bool is_pic_url_Set() const;
    bool is_pic_url_Valid() const;

    bool isCanDislike() const;
    void setCanDislike(const bool &can_dislike);
    bool is_can_dislike_Set() const;
    bool is_can_dislike_Valid() const;

    MDGetRecommendedNewSongs_200_response_result_inner_song getSong() const;
    void setSong(const MDGetRecommendedNewSongs_200_response_result_inner_song &song);
    bool is_song_Set() const;
    bool is_song_Valid() const;

    QString getAlg() const;
    void setAlg(const QString &alg);
    bool is_alg_Set() const;
    bool is_alg_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    qint32 m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_pic_url;
    bool m_pic_url_isSet;
    bool m_pic_url_isValid;

    bool m_can_dislike;
    bool m_can_dislike_isSet;
    bool m_can_dislike_isValid;

    MDGetRecommendedNewSongs_200_response_result_inner_song m_song;
    bool m_song_isSet;
    bool m_song_isValid;

    QString m_alg;
    bool m_alg_isSet;
    bool m_alg_isValid;
};

} // namespace MelodixAPI

Q_DECLARE_METATYPE(MelodixAPI::MDGetRecommendedNewSongs_200_response_result_inner)

#endif // MDGetRecommendedNewSongs_200_response_result_inner_H
